name: dockercompose12009318408639964740
services:
  equipment-db:
    container_name: equipment-db
    environment:
      POSTGRES_DB: eqdb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: app_data
      target: /var/lib/postgresql/eq_data
      volume: {}
  equipment.webapi:
    build:
      context: D:\CostTrackingApp\CostTrackingApi
      dockerfile: Storage.WebAPI/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Equipment.WebAPI
      target: base
    container_name: Equipment.WebAPI
    depends_on:
      equipment-db:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__EquipmentConnection: User ID=postgres;Password=password;Server=equipment-db;Port=5432;Database=eqdb;IntegratedSecurity=true;Pooling=true;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: equipmentwebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net7.0/Equipment.WebAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "7019"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\CostTrackingApp\CostTrackingApi\Equipment.WebAPI
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\CostTrackingApp\CostTrackingApi
      target: /src
      bind:
        create_host_path: true
  storage-db:
    container_name: storage-db
    environment:
      POSTGRES_DB: stgdb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: app_data
      target: /var/lib/postgresql/st_data
      volume: {}
  storage.webapi:
    build:
      context: D:\CostTrackingApp\CostTrackingApi
      dockerfile: Storage.WebAPI/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Storage.WebAPI
      target: base
    container_name: storage-service
    depends_on:
      storage-db:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__StorageConnection: User ID=postgres;Password=password;Server=storage-db;Port=5432;Database=stgdb;IntegratedSecurity=true;Pooling=true;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: storagewebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net7.0/Storage.WebAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "7009"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\CostTrackingApp\CostTrackingApi\Storage.WebAPI
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\efejz\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\CostTrackingApp\CostTrackingApi
      target: /src
      bind:
        create_host_path: true
networks:
  dev:
    name: dockercompose12009318408639964740_dev
    driver: bridge
volumes:
  app_data:
    name: dockercompose12009318408639964740_app_data