// <auto-generated />
using System;
using Equipment.Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Equipment.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(EquipmentDbContext))]
    partial class EquipmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Equipment.Domain.Entities.Machinery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MachineryStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("retired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Machinery");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            Location = "Loc 1",
                            MachineryStatus = 3,
                            Name = "Machinery 1",
                            retired = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            Location = "Loc 2",
                            MachineryStatus = 0,
                            Name = "Machinery 2",
                            retired = false
                        });
                });

            modelBuilder.Entity("Equipment.Domain.Entities.MachineryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MachineryId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("retired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MachineryId");

                    b.ToTable("MachineryService");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desc 1",
                            MachineryId = 1,
                            Price = 10.0,
                            ServiceDate = new DateTime(2023, 7, 27, 10, 29, 38, 392, DateTimeKind.Utc).AddTicks(1342),
                            Title = "Machine Service 1",
                            retired = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Desc 2",
                            MachineryId = 2,
                            Price = 20.5,
                            ServiceDate = new DateTime(2023, 7, 27, 10, 29, 38, 392, DateTimeKind.Utc).AddTicks(1344),
                            Title = "Machine Serivce 2",
                            retired = false
                        });
                });

            modelBuilder.Entity("Equipment.Domain.Entities.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MachineryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ToolId")
                        .HasColumnType("integer");

                    b.Property<bool>("retired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MachineryId");

                    b.HasIndex("ToolId");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("Equipment.Domain.Entities.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ToolStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("retired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Tool");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desc 1",
                            Location = "Loc 1",
                            Title = "Tool 1",
                            ToolStatus = 0,
                            retired = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Desc 2",
                            Location = "Loc 2",
                            Title = "Tool 2",
                            ToolStatus = 3,
                            retired = false
                        });
                });

            modelBuilder.Entity("Equipment.Domain.Entities.ToolService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ToolId")
                        .HasColumnType("integer");

                    b.Property<bool>("retired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.ToTable("ToolService");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desc 1",
                            Price = 10.0,
                            ServiceDate = new DateTime(2023, 7, 27, 10, 29, 38, 392, DateTimeKind.Utc).AddTicks(1362),
                            Title = "Machine Service 1",
                            ToolId = 1,
                            retired = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Desc 2",
                            Price = 20.5,
                            ServiceDate = new DateTime(2023, 7, 27, 10, 29, 38, 392, DateTimeKind.Utc).AddTicks(1365),
                            Title = "Machine Serivce 2",
                            ToolId = 2,
                            retired = false
                        });
                });

            modelBuilder.Entity("Equipment.Domain.Entities.MachineryService", b =>
                {
                    b.HasOne("Equipment.Domain.Entities.Machinery", "Machinery")
                        .WithMany("ServicingHistory")
                        .HasForeignKey("MachineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machinery");
                });

            modelBuilder.Entity("Equipment.Domain.Entities.Maintenance", b =>
                {
                    b.HasOne("Equipment.Domain.Entities.Machinery", "Machinery")
                        .WithMany("MaintenanceHistory")
                        .HasForeignKey("MachineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment.Domain.Entities.Tool", null)
                        .WithMany("MaintenanceHistory")
                        .HasForeignKey("ToolId");

                    b.Navigation("Machinery");
                });

            modelBuilder.Entity("Equipment.Domain.Entities.ToolService", b =>
                {
                    b.HasOne("Equipment.Domain.Entities.Tool", "Tool")
                        .WithMany("ServicingHistory")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("Equipment.Domain.Entities.Machinery", b =>
                {
                    b.Navigation("MaintenanceHistory");

                    b.Navigation("ServicingHistory");
                });

            modelBuilder.Entity("Equipment.Domain.Entities.Tool", b =>
                {
                    b.Navigation("MaintenanceHistory");

                    b.Navigation("ServicingHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
