// <auto-generated />
using System;
using Maintenance.Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Maintenance.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(MaintenanceDbContext))]
    partial class MaintenanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Maintenance.Domain.Entities.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MachineryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Technician")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ToolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRecord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Service record for Komatsu excavator KPC200",
                            MachineryId = 1,
                            Name = "Komatsu PC200 maintenance",
                            Price = 340.0,
                            Status = "Completed",
                            Technician = "Emil Fejzagić",
                            Timestamp = new DateTime(2023, 9, 17, 15, 29, 45, 133, DateTimeKind.Utc).AddTicks(8509)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Service record for BOMAG roller compactor BAC200",
                            MachineryId = 8,
                            Name = "BOMAG roller compactor",
                            Price = 120.40000000000001,
                            Status = "Pending",
                            Technician = "Emil Fejzagić",
                            Timestamp = new DateTime(2023, 9, 17, 15, 29, 45, 133, DateTimeKind.Utc).AddTicks(8515)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Service record for Caterpillar AP SN: CAP300",
                            MachineryId = 6,
                            Name = "Caterpillar AP maintenance",
                            Price = 280.89999999999998,
                            Status = "Completed",
                            Technician = "Emil Fejzagić",
                            Timestamp = new DateTime(2023, 9, 17, 15, 29, 45, 133, DateTimeKind.Utc).AddTicks(8517)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Service record for circular saw",
                            Name = "Circular Saw",
                            Price = 87.150000000000006,
                            Status = "Pending",
                            Technician = "Mirza Zukanović",
                            Timestamp = new DateTime(2023, 9, 17, 15, 29, 45, 133, DateTimeKind.Utc).AddTicks(8519),
                            ToolId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Service record for cordless Dril",
                            Name = "Cordless Dril",
                            Price = 12.35,
                            Status = "Completed",
                            Technician = "Mirza Zukanović",
                            Timestamp = new DateTime(2023, 9, 17, 15, 29, 45, 133, DateTimeKind.Utc).AddTicks(8521),
                            ToolId = 6
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
