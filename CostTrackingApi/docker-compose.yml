version: '3.4'

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge


services:
  storage.webapi:
    image: ${DOCKER_REGISTRY-}storagewebapi
    depends_on:
      - "storage-db"
    container_name: storage-service
    build:
      context: .
      dockerfile: Storage.WebAPI/Dockerfile
    environment:
      - ConnectionStrings__StorageConnection=User ID=postgres;Password=password;Server=storage-db;Port=5432;Database=stgdb;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend
  storage-db:
    image: postgres:latest
    container_name: storage-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password  
      - POSTGRES_DB=stgdb
    ports: 
      - "5433:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/st_data
    networks:
      - backend

  equipment.webapi:
    image: ${DOCKER_REGISTRY-}equipmentwebapi
    depends_on:
      - "equipment-db"
    container_name: equipment-service
    build:
      context: .
      dockerfile: Equipment.WebAPI/Dockerfile
    environment:
      - ConnectionStrings__EquipmentConnection=User ID=postgres;Password=password;Server=equipment-db;Port=5432;Database=eqdb;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend

  equipment-db:
    image: postgres:latest
    container_name: equipment-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password  
      - POSTGRES_DB=eqdb
    ports: 
      - "5434:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/eq_data
    networks:
      - backend


  constructionsite.webapi:
    image: ${DOCKER_REGISTRY-}constructionsite
    depends_on:
      - "constructionsite-db"
    container_name: constructionsite-service
    build:
      context: .
      dockerfile: ConstructionSite.WebAPI/Dockerfile
    environment:
      - ConnectionStrings__ConstructionSiteConnection=User ID=postgres;Password=password;Server=constructionsite-db;Port=5432;Database=csdb;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend

  constructionsite-db:
    image: postgres:latest
    container_name: constructionsite-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password  
      - POSTGRES_DB=csdb
    ports: 
      - "5435:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/cs_data
    networks:
      - backend

  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8001:80
    networks:
      - backend

  auth.webapi:
    container_name: auth-service
    image: ${DOCKER_REGISTRY-}authwebapi
    build:
      context: .
      dockerfile: Auth.WebAPI/Dockerfile
    networks: 
      - backend

volumes:
  app_data:






